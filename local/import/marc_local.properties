###############################################################################
# marc_local.properties -- local overrides to standard VuFind MARC mappings.  #
#                          All settings in this file override equivalent      #
#                          settings in marc.properties.                       #
###############################################################################

id = 999c, first
# Uncomment the following settings to insert appropriate values for your site:

institution = "Musik- och teaterbiblioteket"
# building used for database
building = "Bibliotekskatalogen (Koha)"
#category_facet = 942c
category_facet = 942c:952y, mtb_koha_format_map.properties

collection = 9528, mtb_koha_other_map.properties(collection)
#format = 942c
format = 942c:952y, mtb_koha_format_map_level0.properties
format += 942c:952y, mtb_koha_format_map_level1.properties

location_str_mv = 952c, mtb_koha_other_map.properties(location)

delete_942_n = custom, setFieldOrValue(942n,"0")
#delete_942_n += 942n
#field = "0" ? (949 $n != "1")
#field += "1" ? (949 $n == "1")
#
#pattern_map.942n.pattern_0= 1 => 1
#pattern_map.942n.pattern_1= ^(?!\s*$).+ => 0

allfields = getAllSearchableFieldsAsSet(000,999)

title = 245abnp, first, (pattern_map.title_slash_remove)

pattern_map.title_slash_remove.pattern_0=(.*) +[/]=>$1
pattern_map.title_slash_remove.pattern_1=keepRaw

title_sub = 245bnp, first

title_alt =100t:246abnp:505t:700fgklmnoprst:710t:711t:730adfgklmnoprst:740a

title_sort = 245abknp

preferred_title_txtP = 130adfgklmnoprst:240adfgklmnoprs

series = 490a:800abcdfpqt:830anp
series_facet_str_mv = 490a:800abcdfpqt:830anp, cleanEnd

#Serge changes moved here
#classification_txt = 084a
classification_txt = 084a, first
work_keys_str_mv = custom, getWorkKeys(130anp:730anp, 240anpmr:245abn:246abn:247abn, 240anpmr:245abn, 100ab:110ab:111ac:700ab:710ab:711ac, "", "", ":: NFD; :: lower; a\U00000308>AE; o\U00000308>OE; a\U0000030A>AA; :: Latin; :: [:Nonspacing Mark:] Remove; :: [:Punctuation:] Remove; :: [:Whitespace:] Remove; :: NFKC; AE>ä; OE>ö; AA>å")


# Uncomment the following lines to track history of indexing times for RSS feeds,
# OAI-PMH server and other updates.  The parameter to these functions must be the
# same fieldspec as the id setting above!
# IMPORTANT: Indexing this extra information will make extra database calls during
#            the indexing process and will likely slow things down significantly.
#first_indexed = custom, getFirstIndexed(001)
#last_indexed = custom, getLastIndexed(001)

# Uncomment the following line to index full text from URLs found in your MARC
# records.  All sorts of document formats are supported (PDF, Word Doc, ASCII
# text, HTML, etc.) The first parameter is a fieldspec showing which fields to use
# for URL retrieval.  The second parameter is optional -- if included, only files
# matching the specified suffix will be indexed.  Note that this functionality
# depends on a full text tool being installed on your system.  See the wiki for
# details:
#       https://vufind.org/wiki/indexing:full_text_tools
#fulltext = custom, getFulltext(856u, pdf)

# Uncomment the following if you want to use the OpenLayers3 Geographic Search
# and OpenLayers3 Geo-Display functionality
# See searches.ini for configuration options for Geographic Searching.
# See config.ini for configuration options for Geo-Display.
#long_lat = custom, getAllCoordinates
#long_lat_display = custom, getDisplayCoordinates
#long_lat_label = 034z

# Uncomment the following lines if you are indexing journal article data that uses
# the 773 field to describe the journal containing the article.  These settings
# assume the records have been formatted according to recommendation 4.1 found at:
#     http://www.loc.gov/marc/marbi/2003/2003-dp01.html
# If you have records using a different 773 format, you may need to write a custom
# indexing script to parse out volume/issue/number.
# Additionally, you will need to make sure articles have a format value of "Article."
# If all of your records are articles, you can hard-code this using:
#format = "Article"
# ...but if you need to distinguish between articles and non-articles, you will need
# to build a custom getFormat routine.
#container_volume = 773v
#container_issue = 773l
#container_start_page = 773q
#container_reference = 773g
#container_title = 773s

# Uncomment the following line to use the legacy "single best value" format
# determination in place of the default "multiple formats" approach.
#format = custom, getFormat, format_map.properties

# Uncomment the following lines to use a hierarchical facet for formats. Note that
# the facet needs to be set hierarchical also in facets.ini like this:
# [SpecialFacets]
hierarchical[] = format
# Note also that if you need to customize the mappings, you will have to modify them
# for all the levels used.
format = custom, getFormats, format_map_level0.properties, unique
format += custom, getFormats, format_map_level1.properties, unique
